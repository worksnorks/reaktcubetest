{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\max\\\\Desktop\\\\cube-all\\\\react-admin\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardPage() {\n  _s();\n  const [isCubeActive, setIsCubeActive] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [filteredLogs, setFilteredLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchUserId, setSearchUserId] = useState('');\n\n  // Загрузка статуса кубика и логов при монтировании\n  useEffect(() => {\n    fetchStatusAndLogs();\n  }, []);\n\n  // Обновляем отфильтрованные логи при изменении логов или поискового запроса\n  useEffect(() => {\n    if (!searchUserId.trim()) {\n      setFilteredLogs(logs);\n    } else {\n      setFilteredLogs(logs.filter(log => log.userId && log.userId.includes(searchUserId.trim())));\n    }\n  }, [logs, searchUserId]);\n  const fetchStatusAndLogs = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Запрос статуса кубика (пример API)\n      const statusRes = await fetch('/api/cube/status');\n      if (!statusRes.ok) throw new Error('Ошибка загрузки статуса кубика');\n      const statusData = await statusRes.json();\n\n      // Запрос логов (пример API)\n      const logsRes = await fetch('/api/cube/logs');\n      if (!logsRes.ok) throw new Error('Ошибка загрузки логов');\n      const logsData = await logsRes.json();\n      setIsCubeActive(statusData.active);\n      setLogs(logsData.logs);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Включить/выключить кубик\n  const toggleCube = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const action = isCubeActive ? 'deactivate' : 'activate';\n      const res = await fetch(`/api/cube/${action}`, {\n        method: 'POST'\n      });\n      if (!res.ok) throw new Error('Ошибка при переключении кубика');\n      const data = await res.json();\n      setIsCubeActive(data.active);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Перезагрузить кубик\n  const reloadCube = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const res = await fetch('/api/cube/reload', {\n        method: 'POST'\n      });\n      if (!res.ok) throw new Error('Ошибка перезагрузки кубика');\n      // После перезагрузки обновляем статус и логи\n      await fetchStatusAndLogs();\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u0443\\u0431\\u0438\\u043A\\u043E\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043A\\u0443\\u0431\\u0438\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: isCubeActive ? 'Включён' : 'Выключен'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCube,\n      disabled: loading,\n      children: isCubeActive ? 'Выключить кубик' : 'Включить кубик'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reloadCube,\n      disabled: loading,\n      style: {\n        marginLeft: 10\n      },\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0443\\u0431\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 30\n      },\n      children: \"\\u041B\\u043E\\u0433\\u0438 \\u043E\\u0448\\u0438\\u0431\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchUserId\",\n      children: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E ID \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchUserId\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 ID \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n      value: searchUserId,\n      onChange: e => setSearchUserId(e.target.value),\n      style: {\n        padding: '6px',\n        margin: '10px 0 20px 0',\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), filteredLogs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041B\\u043E\\u0433\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        maxHeight: '300px',\n        overflowY: 'auto',\n        background: '#eee',\n        padding: 10,\n        borderRadius: 4\n      },\n      children: filteredLogs.map((log, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          marginBottom: 6\n        },\n        children: [\"[\", log.timestamp, \"] \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: log.userId ? `User ${log.userId}:` : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }, this), \" \", log.message]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"STjnBE4dsZPXaLhtyuFTjiHeg9g=\");\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DashboardPage","_s","isCubeActive","setIsCubeActive","logs","setLogs","filteredLogs","setFilteredLogs","loading","setLoading","error","setError","searchUserId","setSearchUserId","fetchStatusAndLogs","trim","filter","log","userId","includes","statusRes","fetch","ok","Error","statusData","json","logsRes","logsData","active","err","message","toggleCube","action","res","method","data","reloadCube","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","disabled","marginLeft","marginTop","htmlFor","id","type","placeholder","value","onChange","e","target","padding","margin","width","length","maxHeight","overflowY","background","borderRadius","map","idx","fontFamily","fontSize","marginBottom","timestamp","_c","$RefreshReg$"],"sources":["C:/Users/max/Desktop/cube-all/react-admin/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function DashboardPage() {\r\n  const [isCubeActive, setIsCubeActive] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [filteredLogs, setFilteredLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [searchUserId, setSearchUserId] = useState('');\r\n\r\n  // Загрузка статуса кубика и логов при монтировании\r\n  useEffect(() => {\r\n    fetchStatusAndLogs();\r\n  }, []);\r\n\r\n  // Обновляем отфильтрованные логи при изменении логов или поискового запроса\r\n  useEffect(() => {\r\n    if (!searchUserId.trim()) {\r\n      setFilteredLogs(logs);\r\n    } else {\r\n      setFilteredLogs(\r\n        logs.filter(log =>\r\n          log.userId && log.userId.includes(searchUserId.trim())\r\n        )\r\n      );\r\n    }\r\n  }, [logs, searchUserId]);\r\n\r\n  const fetchStatusAndLogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n\r\n      // Запрос статуса кубика (пример API)\r\n      const statusRes = await fetch('/api/cube/status');\r\n      if (!statusRes.ok) throw new Error('Ошибка загрузки статуса кубика');\r\n      const statusData = await statusRes.json();\r\n\r\n      // Запрос логов (пример API)\r\n      const logsRes = await fetch('/api/cube/logs');\r\n      if (!logsRes.ok) throw new Error('Ошибка загрузки логов');\r\n      const logsData = await logsRes.json();\r\n\r\n      setIsCubeActive(statusData.active);\r\n      setLogs(logsData.logs);\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Включить/выключить кубик\r\n  const toggleCube = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const action = isCubeActive ? 'deactivate' : 'activate';\r\n      const res = await fetch(`/api/cube/${action}`, { method: 'POST' });\r\n      if (!res.ok) throw new Error('Ошибка при переключении кубика');\r\n      const data = await res.json();\r\n      setIsCubeActive(data.active);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Перезагрузить кубик\r\n  const reloadCube = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const res = await fetch('/api/cube/reload', { method: 'POST' });\r\n      if (!res.ok) throw new Error('Ошибка перезагрузки кубика');\r\n      // После перезагрузки обновляем статус и логи\r\n      await fetchStatusAndLogs();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Панель управления кубиком</h1>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {loading && <p>Загрузка...</p>}\r\n\r\n      <p>Статус кубика: <strong>{isCubeActive ? 'Включён' : 'Выключен'}</strong></p>\r\n\r\n      <button onClick={toggleCube} disabled={loading}>\r\n        {isCubeActive ? 'Выключить кубик' : 'Включить кубик'}\r\n      </button>\r\n\r\n      <button onClick={reloadCube} disabled={loading} style={{ marginLeft: 10 }}>\r\n        Перезагрузить кубик\r\n      </button>\r\n\r\n      <h2 style={{ marginTop: 30 }}>Логи ошибок</h2>\r\n\r\n      <label htmlFor=\"searchUserId\">Поиск по ID пользователя:</label><br />\r\n      <input\r\n        id=\"searchUserId\"\r\n        type=\"text\"\r\n        placeholder=\"Введите ID пользователя\"\r\n        value={searchUserId}\r\n        onChange={e => setSearchUserId(e.target.value)}\r\n        style={{ padding: '6px', margin: '10px 0 20px 0', width: '300px' }}\r\n      />\r\n\r\n      {filteredLogs.length === 0 ? (\r\n        <p>Логи отсутствуют</p>\r\n      ) : (\r\n        <ul style={{ maxHeight: '300px', overflowY: 'auto', background: '#eee', padding: 10, borderRadius: 4 }}>\r\n          {filteredLogs.map((log, idx) => (\r\n            <li key={idx} style={{ fontFamily: 'monospace', fontSize: '14px', marginBottom: 6 }}>\r\n              [{log.timestamp}] <b>{log.userId ? `User ${log.userId}:` : ''}</b> {log.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}